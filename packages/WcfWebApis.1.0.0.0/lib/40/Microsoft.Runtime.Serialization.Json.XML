<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Runtime.Serialization.Json</name>
    </assembly>
    <members>
        <member name="T:System.Json.SR">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Json.SR.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Json.SR.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Json.SR.CannotCastJsonValue">
            <summary>
              Looks up a localized string similar to Unable to cast object of type &apos;{0}&apos; to type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Json.SR.CannotReadAsType">
            <summary>
              Looks up a localized string similar to Cannot cast JsonPrimitive value &apos;{0}&apos; as &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Json.SR.ExpectUrlEncodedOrJson">
            <summary>
              Looks up a localized string similar to Expected either to receive JSON in the message body or the content-type to be application/x-www-form-urlencoded..
            </summary>
        </member>
        <member name="P:System.Json.SR.IncorrectJsonFormat">
            <summary>
              Looks up a localized string similar to The input source is not correctly formatted..
            </summary>
        </member>
        <member name="P:System.Json.SR.IndexTypeNotSupported">
            <summary>
              Looks up a localized string similar to The type of the index is not supported by this indexer; use &apos;int&apos; or &apos;string&apos; for array and object indexing respectively..
            </summary>
        </member>
        <member name="P:System.Json.SR.InvalidCastNonNullable">
            <summary>
              Looks up a localized string similar to Cannot convert null to &apos;{0}&apos; because it is a non-nullable value type.
            </summary>
        </member>
        <member name="P:System.Json.SR.InvalidDateFormat">
            <summary>
              Looks up a localized string similar to Cannot cast JsonPrimitive value &apos;{0}&apos; as &apos;{1}&apos;. It is not in a valid date format. Using .NET Custom Date format strings notation (http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx), accepted formats are &apos;{2}&apos;, &apos;{3}&apos;, &apos;{4}&apos;, &apos;{5}&apos;, &apos;{6}&apos;, &apos;{7}&apos;, &apos;{8}&apos;, &apos;{9}&apos; and &apos;{10}&apos;..
            </summary>
        </member>
        <member name="P:System.Json.SR.InvalidJsonPrimitive">
            <summary>
              Looks up a localized string similar to Invalid JSON primitive: {0}..
            </summary>
        </member>
        <member name="P:System.Json.SR.InvalidUriFormat">
            <summary>
              Looks up a localized string similar to Cannot cast JsonPrimitive value &apos;{0}&apos; as a type of &apos;Uri&apos;. The provided string is not in a valid relative or absolute URI format..
            </summary>
        </member>
        <member name="P:System.Json.SR.JsonInvalidBytes">
            <summary>
              Looks up a localized string similar to Invalid byte encoding..
            </summary>
        </member>
        <member name="P:System.Json.SR.JsonStringCannotBeEmpty">
            <summary>
              Looks up a localized string similar to An empty string cannot be parsed as JSON..
            </summary>
        </member>
        <member name="P:System.Json.SR.NamedValueNotOfType">
            <summary>
              Looks up a localized string similar to Field named {0} is not of type {1}..
            </summary>
        </member>
        <member name="P:System.Json.SR.NamedValueNotPresent">
            <summary>
              Looks up a localized string similar to The JsonObject does not contain a key named {0}..
            </summary>
        </member>
        <member name="P:System.Json.SR.OperationNotAllowedOnDefault">
            <summary>
              Looks up a localized string similar to Default JsonValue cannot perform this operation..
            </summary>
        </member>
        <member name="P:System.Json.SR.OverflowReadAs">
            <summary>
              Looks up a localized string similar to Cannot cast JsonPrimitive value &apos;{0}&apos; as &apos;{1}&apos;. The value is either too large or too small for the specified CLR type..
            </summary>
        </member>
        <member name="P:System.Json.SR.TypeNotSupported">
            <summary>
              Looks up a localized string similar to Object type not supported..
            </summary>
        </member>
        <member name="P:System.Json.SR.TypeNotSupportedOnJsonPrimitive">
            <summary>
              Looks up a localized string similar to Objects of type &apos;{0}&apos; cannot be converted to JSON primitives..
            </summary>
        </member>
        <member name="P:System.Json.SR.UnsupportedOnThisJsonValue">
            <summary>
              Looks up a localized string similar to This method or property is not supported on a JSON value of type &apos;{0}&apos;. Some operations may only be performed on JSON Arrays and some may only be performed on JSON Objects..
            </summary>
        </member>
        <member name="P:System.Json.SR.UseOfDefaultNotAllowed">
            <summary>
              Looks up a localized string similar to Default JsonValue cannot be used in this operation..
            </summary>
        </member>
        <member name="T:System.Json.JsonObjectValidation">
            <summary>
            Class which contains many extension methods to do validation on <see cref="T:System.Json.JsonObject"/> instances.
            </summary>
        </member>
        <member name="M:System.Json.JsonObjectValidation.ValidatePresence(System.Json.JsonObject,System.String)">
            <summary>
            Validates that this object contains a member with the given name.
            </summary>
            <param name="value">The <see cref="T:System.Json.JsonObject"/> to which the validation will be applied.</param>
            <param name="key">The key of the member to search.</param>
            <returns>This object, so that other validation operations can be chained.</returns>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">If the validation failed.</exception>
        </member>
        <member name="M:System.Json.JsonObjectValidation.ValidateRegularExpression(System.Json.JsonObject,System.String,System.String)">
            <summary>
            Validates that this object contains a member with the given name, and the value of the member, read as
            <see cref="T:System.String"/>, matches the given regular expression pattern.
            </summary>
            <param name="value">The <see cref="T:System.Json.JsonObject"/> to which the validation will be applied.</param>
            <param name="key">The key of the member to search.</param>
            <param name="pattern">The regular expression pattern.</param>
            <returns>This object, so that other validation operations can be chained.</returns>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">If the validation failed.</exception>
        </member>
        <member name="M:System.Json.JsonObjectValidation.ValidateEnum(System.Json.JsonObject,System.String,System.Type)">
            <summary>
            Validates that this object contains a member with the given name, and the value of the member can be
            converted into the given enum type.
            </summary>
            <param name="value">The <see cref="T:System.Json.JsonObject"/> to which the validation will be applied.</param>
            <param name="key">The key of the member to search.</param>
            <param name="enumType">The enum type to validate the value.</param>
            <returns>This object, so that other validation operations can be chained.</returns>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">If the validation failed.</exception>
        </member>
        <member name="M:System.Json.JsonObjectValidation.ValidateStringLength(System.Json.JsonObject,System.String,System.Int32)">
            <summary>
            Validates that this object contains a member with the given name, and the value of the member, read as
            <see cref="T:System.String"/>, has a length not greater than the given value.
            </summary>
            <param name="value">The <see cref="T:System.Json.JsonObject"/> to which the validation will be applied.</param>
            <param name="key">The key of the member to search.</param>
            <param name="maximumLength">The maximum length allowed for the member value.</param>
            <returns>This object, so that other validation operations can be chained.</returns>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">If the validation failed.</exception>
        </member>
        <member name="M:System.Json.JsonObjectValidation.ValidateStringLength(System.Json.JsonObject,System.String,System.Int32,System.Int32)">
            <summary>
            Validates that this object contains a member with the given name, and the value of the member, read as
            <see cref="T:System.String"/>, has a length within the given range.
            </summary>
            <param name="value">The <see cref="T:System.Json.JsonObject"/> to which the validation will be applied.</param>
            <param name="key">The key of the member to search.</param>
            <param name="minimumLength">The minimum length allowed for the member value.</param>
            <param name="maximumLength">The maximum length allowed for the member value.</param>
            <returns>This object, so that other validation operations can be chained.</returns>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">If the validation failed.</exception>
        </member>
        <member name="M:System.Json.JsonObjectValidation.ValidateTypeOf``1(System.Json.JsonObject,System.String)">
            <summary>
            Validates that the member with the given name can be read as the given type.
            </summary>
            <param name="value">The <see cref="T:System.Json.JsonObject"/> to which the validation will be applied.</param>
            <param name="key">The key of the member to search.</param>
            <typeparam name="T">The type to validate.</typeparam>
            <returns>This object, so that other validation operations can be chained.</returns>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">If the validation failed.</exception>
        </member>
        <member name="M:System.Json.JsonObjectValidation.ValidateCustomValidator(System.Json.JsonObject,System.String,System.Type,System.String)">
            <summary>
            Validates this object with a custom method.
            </summary>
            <param name="value">The <see cref="T:System.Json.JsonObject"/> to which the validation will be applied.</param>
            <param name="key">The name of the key to be passed to the validation context.</param>
            <param name="type">Tye type where the custom method is located.</param>
            <param name="method">The name of the method used to perform the validation.</param>
            <returns>This object, so that other validation operations can be chained.</returns>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">If the validation failed.</exception>
        </member>
        <member name="M:System.Json.JsonObjectValidation.ValidateRange(System.Json.JsonObject,System.String,System.Int32,System.Int32)">
            <summary>
            Validates that the member with the given name can be read as a <see cref="T:System.Int32"/>, and when read as such
            it is within the given range.
            </summary>
            <param name="value">The <see cref="T:System.Json.JsonObject"/> to which the validation will be applied.</param>
            <param name="key">The key of the member to search.</param>
            <param name="min">The lower bound of the range check.</param>
            <param name="max">The upper bound of the range check.</param>
            <returns>This object, so that other validation operations can be chained.</returns>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">If the validation failed.</exception>
        </member>
        <member name="M:System.Json.JsonObjectValidation.ValidateRange(System.Json.JsonObject,System.String,System.Double,System.Double)">
            <summary>
            Validates that the member with the given name can be read as a <see cref="T:System.Double"/>, and when read as such
            it is within the given range.
            </summary>
            <param name="value">The <see cref="T:System.Json.JsonObject"/> to which the validation will be applied.</param>
            <param name="key">The key of the member to search.</param>
            <param name="min">The lower bound of the range check.</param>
            <param name="max">The upper bound of the range check.</param>
            <returns>This object, so that other validation operations can be chained.</returns>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">If the validation failed.</exception>
        </member>
        <member name="M:System.Json.JsonObjectValidation.ValidateRange``1(System.Json.JsonObject,System.String,``0,``0)">
            <summary>
            Validates that the member with the given name can be read as the given type, and when read as such
            it is within the given range.
            </summary>
            <typeparam name="T">The type of the member.</typeparam>
            <param name="value">The <see cref="T:System.Json.JsonObject"/> to which the validation will be applied.</param>
            <param name="key">The key of the member to search.</param>
            <param name="min">The lower bound of the range check.</param>
            <param name="max">The upper bound of the range check.</param>
            <returns>This object, so that other validation operations can be chained.</returns>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">If the validation failed.</exception>
        </member>
        <member name="T:System.Json.JsonArray">
            <summary>
            A JsonArray is an ordered sequence of zero or more <see cref="T:System.Json.JsonValue"/> objects.
            </summary>
        </member>
        <member name="T:System.Json.JsonValue">
            <summary>
            This is the base class for JavaScript Object Notation (JSON) common language runtime (CLR) types. 
            </summary>
        </member>
        <member name="M:System.Json.JsonValue.Parse(System.String)">
            <summary>
            Deserializes text-based JSON into a JSON CLR type.
            </summary>
            <param name="json">The text-based JSON to be parsed into a JSON CLR type.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> object that represents the parsed
            text-based JSON as a CLR type.</returns>
            <exception cref="T:System.ArgumentException">The length of jsonString is zero.</exception>
            <exception cref="T:System.ArgumentNullException">jsonString is null.</exception>
            <remarks>The result will be an instance of either <see cref="T:System.Json.JsonArray"/>,
            <see cref="T:System.Json.JsonObject"/> or <see cref="T:System.Json.JsonPrimitive"/>,
            depending on the text-based JSON supplied to the method.</remarks>
        </member>
        <member name="M:System.Json.JsonValue.Load(System.IO.TextReader)">
            <summary>
            Deserializes text-based JSON from a text reader into a JSON CLR type.
            </summary>
            <param name="textReader">A <see cref="T:System.IO.TextReader"/> over text-based JSON content.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> object that represents the parsed
            text-based JSON as a CLR type.</returns>
            <exception cref="T:System.ArgumentNullException">textReader is null.</exception>
            <remarks>The result will be an instance of either <see cref="T:System.Json.JsonArray"/>,
            <see cref="T:System.Json.JsonObject"/> or <see cref="T:System.Json.JsonPrimitive"/>,
            depending on the text-based JSON supplied to the method.</remarks>
        </member>
        <member name="M:System.Json.JsonValue.Load(System.IO.Stream)">
            <summary>
            Deserializes text-based JSON from a stream into a JSON CLR type.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that contains text-based JSON content.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> object that represents the parsed
            text-based JSON as a CLR type.</returns>
            <exception cref="T:System.ArgumentNullException">stream is null.</exception>
            <remarks>The result will be an instance of either <see cref="T:System.Json.JsonArray"/>,
            <see cref="T:System.Json.JsonObject"/> or <see cref="T:System.Json.JsonPrimitive"/>,
            depending on the text-based JSON supplied to the method.</remarks>
        </member>
        <member name="M:System.Json.JsonValue.Load(System.Xml.XmlDictionaryReader)">
            <summary>
            Deserializes JSON from a XML reader which implements the
            <a href="http://msdn.microsoft.com/en-us/library/bb924435.aspx">mapping between JSON and XML</a>.
            </summary>
            <param name="jsonReader">The <see cref="T:System.Xml.XmlDictionaryReader"/> which
            exposes JSON as XML.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> that represents the parsed
            JSON/XML as a CLR type.</returns>
        </member>
        <member name="M:System.Json.JsonValue.CreateFrom(System.Object)">
            <summary>
            Creates a <see cref="T:System.Json.JsonValue"/> object based on an arbitrary CLR object.
            </summary>
            <param name="value">The object to be converted to <see cref="T:System.Json.JsonValue"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> which represents the given object.</returns>
            <remarks>The conversion is done through the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/>;
            the object is first serialized into JSON using the serializer, then parsed into a <see cref="T:System.Json.JsonValue"/>
            object.</remarks>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.String">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.String"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.String"/> object.</param>
            <returns>The <see cref="T:System.String"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified or null if value is null.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Double">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Double"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Double"/> object.</param>
            <returns>The <see cref="T:System.Double"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Single">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Single"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Single"/> object.</param>
            <returns>The <see cref="T:System.Single"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Decimal">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Decimal"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Decimal"/> object.</param>
            <returns>The <see cref="T:System.Decimal"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Int64">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Int64"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Int64"/> object.</param>
            <returns>The <see cref="T:System.Int64"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.UInt64">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.UInt64"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.UInt64"/> object.</param>
            <returns>The <see cref="T:System.UInt64"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Int32">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Int32"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Int32"/> object.</param>
            <returns>The <see cref="T:System.Int32"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.UInt32">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.UInt32"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.UInt32"/> object.</param>
            <returns>The <see cref="T:System.UInt32"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Int16">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Int16"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Int16"/> object.</param>
            <returns>The <see cref="T:System.Int16"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.UInt16">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.UInt16"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.UInt16"/> object.</param>
            <returns>The <see cref="T:System.UInt16"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.SByte">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.SByte"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.SByte"/> object.</param>
            <returns>The <see cref="T:System.SByte"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Byte">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Byte"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Byte"/> object.</param>
            <returns>The <see cref="T:System.Byte"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Uri">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Uri"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Uri"/> object.</param>
            <returns>The <see cref="T:System.Uri"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified or null if value is null.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Guid">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Guid"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Guid"/> object.</param>
            <returns>The <see cref="T:System.Guid"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.DateTime">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.DateTime"/> object.</param>
            <returns>The <see cref="T:System.DateTime"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Char">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Char"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Char"/> object.</param>
            <returns>The <see cref="T:System.Char"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.Boolean">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.Boolean"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.Boolean"/> object.</param>
            <returns>The <see cref="T:System.Boolean"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Explicit(System.Json.JsonValue)~System.DateTimeOffset">
            <summary>
            Enables explicit casts from an instance of type <see cref="T:System.Json.JsonValue"/> to a <see cref="T:System.DateTimeOffset"/> object.
            </summary>
            <param name="value">The instance of <see cref="T:System.Json.JsonValue"/> used to initialize the <see cref="T:System.DateTimeOffset"/> object.</param>
            <returns>The <see cref="T:System.DateTimeOffset"/> initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Boolean)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Boolean"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Boolean"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Byte)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Byte"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Byte"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Decimal)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Decimal"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Decimal"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Double)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Double"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Double"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Int16)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Int16"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Int16"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Int32)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Int32"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Int32"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Int64)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Int64"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Int64"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Single)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Single"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Single"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.String)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.String"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.String"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.String"/> specified, or null if the value is null.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Char)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Char"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Char"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.DateTime)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.DateTime"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.DateTime"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Guid)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Guid"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Guid"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Guid"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.Uri)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.Uri"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.Uri"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.Uri"/> specified, or null if the value is null.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.SByte)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.SByte"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.SByte"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.UInt16)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.UInt16"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.UInt16"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.UInt32)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.UInt32"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.UInt32"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.UInt64)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.UInt64"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.UInt64"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.op_Implicit(System.DateTimeOffset)~System.Json.JsonValue">
            <summary>
            Enables implicit casts from type <see cref="T:System.DateTimeOffset"/> to a <see cref="T:System.Json.JsonPrimitive"/>.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> instance used to initialize the <see cref="T:System.Json.JsonPrimitive"/>.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> initialized with the <see cref="T:System.DateTimeOffset"/> specified.</returns>
        </member>
        <member name="M:System.Json.JsonValue.CastValue``1(System.Json.JsonValue)">
            <summary>
            Performs a cast operation from a <see cref="T:System.Json.JsonValue"/> instance into the specified type parameter./&gt;
            </summary>
            <typeparam name="T">The type to cast the instance to.</typeparam>
            <param name="value">The <see cref="T:System.Json.JsonValue"/> instance.</param>
            <returns>An object of type T initialized with the <see cref="T:System.Json.JsonValue"/> value specified.</returns>
            <remarks>This method is to support the framework and is not intended to be used externally, use explicit type cast instead.</remarks>
        </member>
        <member name="M:System.Json.JsonValue.GetEnumerator">
            <summary>
            Returns an enumerator which iterates through the values in this object.
            </summary>
            <returns>An enumerator which which iterates through the values in this object.</returns>
            <remarks>The enumerator returned by this class is empty; subclasses will override this method to return appropriate enumerators for themselves.</remarks>
        </member>
        <member name="M:System.Json.JsonValue.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator which iterates through the values in this object.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> which iterates through the values in this object.</returns>
            <remarks>The enumerator returned by this class is empty; subclasses will override this method to return appropriate enumerators for themselves.</remarks>
        </member>
        <member name="M:System.Json.JsonValue.AsDynamic">
            <summary>
            Gets this instance as a <code>dynamic</code> object.
            </summary>
            <returns>This instance as <code>dynamic</code>.</returns>
        </member>
        <member name="M:System.Json.JsonValue.TryReadAs``1(``0@)">
            <summary>
            Attempts to convert this <see cref="T:System.Json.JsonValue"/> instance into the type T.
            </summary>
            <typeparam name="T">The type to which the conversion is being performed.</typeparam>
            <param name="valueOfT">An instance of T initialized with this instance, or the default
            value of T, if the conversion cannot be performed.</param>
            <returns>true if this <see cref="T:System.Json.JsonValue"/> instance can be read as type T; otherwise, false.</returns>
        </member>
        <member name="M:System.Json.JsonValue.ReadAs``1">
            <summary>
            Attempts to convert this <see cref="T:System.Json.JsonValue"/> instance into the type T.
            </summary>
            <typeparam name="T">The type to which the conversion is being performed.</typeparam>
            <returns>An instance of T initialized with the <see cref="T:System.Json.JsonValue"/> value
            specified if the conversion.</returns>
            <exception cref="T:System.NotSupportedException">If this <see cref="T:System.Json.JsonValue"/> value cannot be
            converted into the type T.</exception>
        </member>
        <member name="M:System.Json.JsonValue.ReadAs``1(``0)">
            <summary>
            Attempts to convert this <see cref="T:System.Json.JsonValue"/> instance into the type T.
            </summary>
            <typeparam name="T">The type to which the conversion is being performed.</typeparam>
            <param name="fallback">The fallback value to be returned, if the conversion cannot be made.</param>
            <returns>An instance of T initialized with the <see cref="T:System.Json.JsonValue"/> value
            specified if the conversion, or the fallback value, if the conversion cannot be made.</returns>
        </member>
        <member name="M:System.Json.JsonValue.ReadAs(System.Type,System.Object)">
            <summary>
            Attempts to convert this <see cref="T:System.Json.JsonValue"/> instance to an instance of the specified type.
            </summary>
            <param name="type">The type to which the conversion is being performed.</param>
            <param name="fallback">The fallback value to be returned, if the conversion cannot be made.</param>
            <returns>An object instance initialized with the <see cref="T:System.Json.JsonValue"/> value
            specified if the conversion, or the fallback value, if the conversion cannot be made.</returns>
        </member>
        <member name="M:System.Json.JsonValue.ReadAs(System.Type)">
            <summary>
            Attempts to convert this <see cref="T:System.Json.JsonValue"/> instance into an instance of the specified type.
            </summary>
            <param name="type">The type to which the conversion is being performed.</param>
            <returns>An object instance initialized with the <see cref="T:System.Json.JsonValue"/> value
            specified if the conversion.</returns>
            <exception cref="T:System.NotSupportedException">If this <see cref="T:System.Json.JsonValue"/> value cannot be
            converted into the type T.</exception>
        </member>
        <member name="M:System.Json.JsonValue.TryReadAs(System.Type,System.Object@)">
            <summary>
            Attempts to convert this <see cref="T:System.Json.JsonValue"/> instance into an instance of the specified type.
            </summary>
            <param name="type">The type to which the conversion is being performed.</param>
            <param name="value">An object to be initialized with this instance or null if the conversion cannot be performed.</param>
            <returns>true if this <see cref="T:System.Json.JsonValue"/> instance can be read as the specified type; otherwise, false.</returns>
        </member>
        <member name="M:System.Json.JsonValue.Save(System.IO.Stream)">
            <summary>
            Serializes the <see cref="T:System.Json.JsonValue"/> CLR type into text-based JSON using a stream.
            </summary>
            <param name="stream">Stream to which to write text-based JSON.</param>
        </member>
        <member name="M:System.Json.JsonValue.Save(System.IO.TextWriter)">
            <summary>
            Serializes the <see cref="T:System.Json.JsonValue"/> CLR type into text-based JSON using a text writer.
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> used to write text-based JSON.</param>
        </member>
        <member name="M:System.Json.JsonValue.Save(System.Xml.XmlDictionaryWriter)">
            <summary>
            Serializes this <see cref="T:System.Json.JsonValue"/> CLR type into a JSON/XML writer using the
            <a href="http://msdn.microsoft.com/en-us/library/bb924435.aspx">mapping between JSON and XML</a>.
            </summary>
            <param name="jsonWriter">The JSON/XML writer used to serialize this instance.</param>
        </member>
        <member name="M:System.Json.JsonValue.ToString">
            <summary>
            Saves (serializes) this JSON CLR type into text-based JSON.
            </summary>
            <returns>A <see cref="T:System.String"/>, which contains text-based JSON.</returns>
        </member>
        <member name="M:System.Json.JsonValue.ContainsKey(System.String)">
            <summary>
            Checks whether a key/value pair with a specified key exists in the JSON CLR object type.
            </summary>
            <param name="key">The key to check for.</param>
            <returns>false in this class; subclasses may override this method to return other values.</returns>
            <remarks>This method is overloaded in the implementation of the <see cref="T:System.Json.JsonObject"/>
            class, which inherits from this class.</remarks>
        </member>
        <member name="M:System.Json.JsonValue.GetValue(System.String)">
            <summary>
            Returns the value returned by the safe string indexer for this instance.
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>If this is an instance of <see cref="T:System.Json.JsonObject"/>, it contains
            the given key and the value corresponding to the key is not null, then it will return that value.
            Otherwise it will return a <see cref="T:System.Json.JsonValue"/> instance with <see cref="P:System.Json.JsonValue.JsonType"/>
            equals to <see cref="T:System.Json.JsonType">Default</see>.</returns>
        </member>
        <member name="M:System.Json.JsonValue.GetValue(System.Int32)">
            <summary>
            Returns the value returned by the safe int indexer for this instance.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>If this is an instance of <see cref="T:System.Json.JsonArray"/>, the index is within the array
            bounds, and the value corresponding to the index is not null, then it will return that value.
            Otherwise it will return a <see cref="T:System.Json.JsonValue"/> instance with <see cref="P:System.Json.JsonValue.JsonType"/>
            equals to <see cref="T:System.Json.JsonType">Default</see>.</returns>
        </member>
        <member name="M:System.Json.JsonValue.SetValue(System.String,System.Object)">
            <summary>
            Sets the value and returns it.
            </summary>
            <param name="key">The key of the element to set.</param>
            <param name="value">The value to be set.</param>
            <returns>The value, converted into a JsonValue, set in this collection.</returns>
            <exception cref="T:System.ArgumentException">If the value cannot be converted into a JsonValue.</exception>
        </member>
        <member name="M:System.Json.JsonValue.SetValue(System.Int32,System.Object)">
            <summary>
            Sets the value and returns it.
            </summary>
            <param name="index">The zero-based index of the element to set.</param>
            <param name="value">The value to be set.</param>
            <returns>The value, converted into a JsonValue, set in this collection.</returns>
            <exception cref="T:System.ArgumentException">If the value cannot be converted into a JsonValue.</exception>
        </member>
        <member name="M:System.Json.JsonValue.ValueOrDefault(System.String)">
            <summary>
            Safe string indexer for the <see cref="T:System.Json.JsonValue"/> type. 
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>If this is an instance of <see cref="T:System.Json.JsonObject"/>, it contains
            the given key and the value corresponding to the key is not null, then it will return that value.
            Otherwise it will return a <see cref="T:System.Json.JsonValue"/> instance with <see cref="P:System.Json.JsonValue.JsonType"/>
            equals to <see cref="T:System.Json.JsonType">Default</see>.</returns>
        </member>
        <member name="M:System.Json.JsonValue.ValueOrDefault(System.Int32)">
            <summary>
            Safe indexer for the <see cref="T:System.Json.JsonValue"/> type. 
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>If this is an instance of <see cref="T:System.Json.JsonArray"/>, the index is within the array
            bounds, and the value corresponding to the index is not null, then it will return that value.
            Otherwise it will return a <see cref="T:System.Json.JsonValue"/> instance with <see cref="P:System.Json.JsonValue.JsonType"/>
            equals to <see cref="T:System.Json.JsonType">Default</see>.</returns>
        </member>
        <member name="M:System.Json.JsonValue.WriteStartElementAndGetNext(System.Xml.XmlDictionaryWriter,System.Int32)">
            <summary>
            Callback method called during Save operations to let the instance write the start element
            and return the next element in the collection.
            </summary>
            <param name="jsonWriter">The JXML writer used to write JSON.</param>
            <param name="index">The index within this collection.</param>
            <returns>The next item in the collection, or null of there are no more items.</returns>
        </member>
        <member name="M:System.Json.JsonValue.WriteAttributeString(System.Xml.XmlDictionaryWriter)">
            <summary>
            Callback method called to let an instance write the proper JXML attribute when saving this
            instance.
            </summary>
            <param name="jsonWriter">The JXML writer used to write JSON.</param>
        </member>
        <member name="M:System.Json.JsonValue.OnSaveStarted">
            <summary>
            Callback method called when a Save operation is starting for this instance.
            </summary>
        </member>
        <member name="M:System.Json.JsonValue.OnSaveEnded">
            <summary>
            Callback method called when a Save operation is finished for this instance.
            </summary>
        </member>
        <member name="P:System.Json.JsonValue.JsonType">
            <summary>
            Gets the JSON CLR type represented by this instance.
            </summary>
        </member>
        <member name="P:System.Json.JsonValue.Count">
            <summary>
            Gets the number of items in this object.
            </summary>
        </member>
        <member name="P:System.Json.JsonValue.Item(System.String)">
            <summary>
            This indexer is not supported for this base class and throws an exception.
            </summary>
            <param name="key">The key of the element to get or set.</param>
            <returns><see cref="T:System.Json.JsonValue"/>.</returns>
            <remarks>The exception thrown is the <see cref="T:System.InvalidOperationException"/>.
            This method is overloaded in the implementation of the <see cref="T:System.Json.JsonObject"/>
            class, which inherits from this class.</remarks>
        </member>
        <member name="P:System.Json.JsonValue.Item(System.Int32)">
            <summary>
            This indexer is not supported for this base class and throws an exception.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns><see cref="T:System.Json.JsonValue"/>.</returns>
            <remarks>The exception thrown is the <see cref="T:System.InvalidOperationException"/>.
            This method is overloaded in the implementation of the <see cref="T:System.Json.JsonArray"/>
            class, which inherits from this class.</remarks>
        </member>
        <member name="M:System.Json.JsonArray.#ctor(System.Collections.Generic.IEnumerable{System.Json.JsonValue})">
            <summary>
            Creates an instance of the <see cref="T:System.Json.JsonArray"/> class initialized by
            an <see cref="T:System.Collections.Generic.IEnumerable`1"/> enumeration of
            objects of type <see cref="T:System.Json.JsonValue"/>.
            </summary>
            <param name="items">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> enumeration
            of objects of type <see cref="T:System.Json.JsonValue"/> used to initialize the JavaScript Object Notation (JSON)
            array.</param>
            <exception cref="T:System.ArgumentNullException">If items is null.</exception>
            <exception cref="T:System.ArgumentException">If any of the items in the collection
            is a <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/> property of
            value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonArray.#ctor(System.Json.JsonValue[])">
            <summary>
            Creates an instance of the <see cref="T:System.Json.JsonArray"/> class, initialized by an array of type <see cref="T:System.Json.JsonValue"/>.
            </summary>
            <param name="items">The array of type <see cref="T:System.Json.JsonValue"/> used to initialize the
            JavaScript Object Notation (JSON) array.</param>
            <exception cref="T:System.ArgumentException">If any of the items in the collection
            is a <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/> property of
            value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Json.JsonValue})">
            <summary>
            Adds the elements from a collection of type <see cref="T:System.Json.JsonValue"/> to this instance.
            </summary>
            <param name="items">Collection of items to add.</param>
            <exception cref="T:System.ArgumentNullException">If items is null.</exception>
            <exception cref="T:System.ArgumentException">If any of the items in the collection
            is a <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/> property of
            value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonArray.AddRange(System.Json.JsonValue[])">
            <summary>
            Adds the elements from an array of type <see cref="T:System.Json.JsonValue"/> to this instance.
            </summary>
            <param name="items">The array of type JsonValue to be added to this instance.</param>
            <exception cref="T:System.ArgumentNullException">If items is null.</exception>
            <exception cref="T:System.ArgumentException">If any of the items in the array
            is a <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/> property of
            value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonArray.IndexOf(System.Json.JsonValue)">
            <summary>
            Searches for a specified object and returns the zero-based index of its first
            occurrence within this <see cref="T:System.Json.JsonArray"/>.
            </summary>
            <param name="item">The <see cref="T:System.Json.JsonValue"/> object to look up.</param>
            <returns>The zero-based index of the first occurrence of item within the
            <see cref="T:System.Json.JsonArray"/>, if found; otherwise, -1.</returns>
        </member>
        <member name="M:System.Json.JsonArray.Insert(System.Int32,System.Json.JsonValue)">
            <summary>
            Insert a JSON CLR type into the array at a specified index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="item">The <see cref="T:System.Json.JsonValue"/> object to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If index is less than zero or larger than
            the size of the array.</exception>
            <exception cref="T:System.ArgumentException">If the object to insert has a
            <see cref="P:System.Json.JsonValue.JsonType"/> property of value
            <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonArray.RemoveAt(System.Int32)">
            <summary>
            Remove the JSON value at a specified index of <see cref="T:System.Json.JsonArray"/>.
            </summary>
            <param name="index">The zero-based index at which to remove the <see cref="T:System.Json.JsonValue"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If index is less than zero or index
            is equal or larger than the size of the array.</exception>
        </member>
        <member name="M:System.Json.JsonArray.Add(System.Json.JsonValue)">
            <summary>
            Adds a <see cref="T:System.Json.JsonValue"/> object to the end of the array.
            </summary>
            <param name="item">The <see cref="T:System.Json.JsonValue"/> object to add.</param>
            <exception cref="T:System.ArgumentException">If the object to add has a
            <see cref="P:System.Json.JsonValue.JsonType"/> property of value
            <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonArray.Clear">
            <summary>
            Removes all JSON CLR types from the <see cref="T:System.Json.JsonArray"/>.
            </summary>
        </member>
        <member name="M:System.Json.JsonArray.Contains(System.Json.JsonValue)">
            <summary>
            Checks whether a specified JSON CLR type is in the <see cref="T:System.Json.JsonArray"/>.
            </summary>
            <param name="item">The <see cref="T:System.Json.JsonValue"/> to check for in the array.</param>
            <returns>true if item is found in the <see cref="T:System.Json.JsonArray"/>; otherwise, false.</returns>
        </member>
        <member name="M:System.Json.JsonArray.CopyTo(System.Json.JsonValue[],System.Int32)">
            <summary>
            Copies the contents of the current JSON CLR array instance into a specified
            destination array beginning at the specified index.
            </summary>
            <param name="array">The destination array to which the elements of the current
            <see cref="T:System.Json.JsonArray"/> object are copied.</param>
            <param name="arrayIndex">The zero-based index in the destination array at which the
            copying of the elements of the JSON CLR array begins.</param>
        </member>
        <member name="M:System.Json.JsonArray.Remove(System.Json.JsonValue)">
            <summary>
            Removes the first occurrence of the specified JSON value from the array.
            </summary>
            <param name="item">The <see cref="T:System.Json.JsonValue"/> to remove from the <see cref="T:System.Json.JsonArray"/>.</param>
            <returns>true if item is successfully removed; otherwise, false. This method
            also returns false if item was not found in the <see cref="T:System.Json.JsonArray"/>.</returns>
        </member>
        <member name="M:System.Json.JsonArray.GetEnumerator">
            <summary>
            Returns an enumerator which iterates through the values in this object.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> which iterates through the values in this object.</returns>
            <remarks>The enumerator returned by this class contains one pair for each element
            in this array, whose key is the element index (as a string), and the value is the
            element itself.</remarks>
        </member>
        <member name="M:System.Json.JsonArray.System#Collections#Generic#IEnumerable{System#Json#JsonValue}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:System.Json.JsonValue"/> objects in the array.
            </summary>
            <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerator`1"/> object that
            iterates through the <see cref="T:System.Json.JsonValue"/> elements in this <see cref="T:System.Json.JsonArray"/>.</returns>
        </member>
        <member name="M:System.Json.JsonArray.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:System.Json.JsonValue"/> objects in the array.
            </summary>
            <returns>Returns an <see cref="T:System.Collections.IEnumerator"/> object that
            iterates through the <see cref="T:System.Json.JsonValue"/> elements in this <see cref="T:System.Json.JsonArray"/>.</returns>
        </member>
        <member name="M:System.Json.JsonArray.ValueOrDefault(System.Int32)">
            <summary>
            Safe indexer for the <see cref="T:System.Json.JsonValue"/> type. 
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>If the index is within the array bounds and the value corresponding to the
            index is not null, then it will return that value. Otherwise it will return a
            <see cref="T:System.Json.JsonValue"/> instance with <see cref="P:System.Json.JsonValue.JsonType"/>
            equals to <see cref="T:System.Json.JsonType">Default</see>.</returns>
        </member>
        <member name="M:System.Json.JsonArray.WriteAttributeString(System.Xml.XmlDictionaryWriter)">
            <summary>
            Callback method called to let an instance write the proper JXML attribute when saving this
            instance.
            </summary>
            <param name="jsonWriter">The JXML writer used to write JSON.</param>
        </member>
        <member name="M:System.Json.JsonArray.WriteStartElementAndGetNext(System.Xml.XmlDictionaryWriter,System.Int32)">
            <summary>
            Callback method called during Save operations to let the instance write the start element
            and return the next element in the collection.
            </summary>
            <param name="jsonWriter">The JXML writer used to write JSON.</param>
            <param name="currentIndex">The index within this collection.</param>
            <returns>The next item in the collection, or null of there are no more items.</returns>
        </member>
        <member name="P:System.Json.JsonArray.JsonType">
            <summary>
            Gets the JSON type of this <see cref="T:System.Json.JsonArray"/>. The return value
            is always <see cref="T:System.Json.JsonType">Array</see>.
            </summary>
        </member>
        <member name="P:System.Json.JsonArray.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Json.JsonArray"/> is read-only.
            </summary>
        </member>
        <member name="P:System.Json.JsonArray.Count">
            <summary>
            Returns the number of <see cref="T:System.Json.JsonValue"/> elements in the array.
            </summary>
        </member>
        <member name="P:System.Json.JsonArray.Item(System.Int32)">
            <summary>
            Gets or sets the JSON value at a specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If index is not a valid index for this array.</exception>
            <exception cref="T:System.ArgumentException">The property is set and the value is a
            <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/>
            property of value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="T:System.Json.JsonObject">
            <summary>
            A JsonObject is an unordered collection of zero or more key/value pairs.
            </summary>
            <remarks>A JsonObject is an unordered collection of zero or more key/value pairs,
            where each key is a String and each value is a <see cref="T:System.Json.JsonValue"/>, which can be a
            <see cref="T:System.Json.JsonPrimitive"/>, a <see cref="T:System.Json.JsonArray"/>, or a JsonObject.</remarks>
        </member>
        <member name="M:System.Json.JsonObject.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Json.JsonValue}})">
            <summary>
            Creates an instance of the <see cref="T:System.Json.JsonObject"/> class initialized with an
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of key/value pairs.
            </summary>
            <param name="items">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of
            <see cref="T:System.Collections.Generic.KeyValuePair`2"/> used to initialize the
            key/value pairs</param>
            <exception cref="T:System.ArgumentNullException">If items is null.</exception>
            <exception cref="T:System.ArgumentException">If any of the values in the collection
            is a <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/> property of
            value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonObject.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Json.JsonValue}[])">
            <summary>
            Creates an instance of the <see cref="T:System.Json.JsonObject"/> class initialized with a collection of key/value pairs.
            </summary>
            <param name="items">The <see cref="T:System.Collections.Generic.KeyValuePair`2"/> objects used to initialize the key/value pairs.</param>
            <exception cref="T:System.ArgumentException">If any of the values in the collection
            is a <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/> property of
            value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonObject.ValueOrDefault(System.String)">
            <summary>
            Safe string indexer for the <see cref="T:System.Json.JsonValue"/> type. 
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>If this instance contains the given key and the value corresponding to
            the key is not null, then it will return that value. Otherwise it will return a
            <see cref="T:System.Json.JsonValue"/> instance with <see cref="P:System.Json.JsonValue.JsonType"/>
            equals to <see cref="T:System.Json.JsonType">Default</see>.</returns>
        </member>
        <member name="M:System.Json.JsonObject.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Json.JsonValue}})">
            <summary>
            Adds a specified collection of key/value pairs to this instance.
            </summary>
            <param name="items">The collection of key/value pairs to add.</param>
            <exception cref="T:System.ArgumentNullException">If items is null.</exception>
            <exception cref="T:System.ArgumentException">If the value of any of the items in the collection
            is a <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/> property of
            value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonObject.AddRange(System.Collections.Generic.KeyValuePair{System.String,System.Json.JsonValue}[])">
            <summary>
            Adds the elements from an array of type <see cref="T:System.Json.JsonValue"/> to this instance.
            </summary>
            <param name="items">The array of key/value paris to be added to this instance.</param>
            <exception cref="T:System.ArgumentException">If the value of any of the items in the array
            is a <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/> property of
            value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonObject.Add(System.String,System.Json.JsonValue)">
            <summary>
            Adds a key/value pair to this <see cref="T:System.Json.JsonObject"/> instance.
            </summary>
            <param name="key">The key for the element added.</param>
            <param name="value">The <see cref="T:System.Json.JsonValue"/> for the element added.</param>
            <exception cref="T:System.ArgumentException">If the value is a <see cref="T:System.Json.JsonValue"/>
            with <see cref="P:System.Json.JsonValue.JsonType"/> property of
            value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonObject.Add(System.Collections.Generic.KeyValuePair{System.String,System.Json.JsonValue})">
            <summary>
            Adds a key/value pair to this <see cref="T:System.Json.JsonObject"/> instance.
            </summary>
            <param name="item">The key/value pair to be added.</param>
            <exception cref="T:System.ArgumentException">If the value of the pair is a
            <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/>
            property of value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="M:System.Json.JsonObject.ContainsKey(System.String)">
            <summary>
            Checks whether a key/value pair with a specified key exists in this <see cref="T:System.Json.JsonObject"/> instance.
            </summary>
            <param name="key">The key to check for.</param>
            <returns>true if this instance contains the key; otherwise, false.</returns>
        </member>
        <member name="M:System.Json.JsonObject.Remove(System.String)">
            <summary>
            Removes the key/value pair with a specified key from this <see cref="T:System.Json.JsonObject"/> instance.
            </summary>
            <param name="key">The key of the item to remove.</param>
            <returns>true if the element is successfully found and removed; otherwise, false.
            This method returns false if key is not found in this <see cref="T:System.Json.JsonObject"/> instance.</returns>
        </member>
        <member name="M:System.Json.JsonObject.TryGetValue(System.String,System.Json.JsonValue@)">
            <summary>
            Attempts to get the value that corresponds to the specified key.
            </summary>
            <param name="key">The key of the value to retrieve.</param>
            <param name="value">The primitive or structured <see cref="T:System.Json.JsonValue"/> object that has the key
            specified. If this object does not contain a key/value pair with the given key,
            this parameter is set to null.</param>
            <returns>true if the instance of the <see cref="T:System.Json.JsonObject"/> contains an element with the
            specified key; otherwise, false.</returns>
        </member>
        <member name="M:System.Json.JsonObject.Clear">
            <summary>
            Removes all key/value pairs from this <see cref="T:System.Json.JsonObject"/> instance.
            </summary>
        </member>
        <member name="M:System.Json.JsonObject.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Json.JsonValue}[],System.Int32)">
            <summary>
            Copies the contents of this <see cref="T:System.Json.JsonObject"/> instance into a specified
            key/value destination array beginning at a specified index.
            </summary>
            <param name="array">The destination array of type <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            to which the elements of this <see cref="T:System.Json.JsonObject"/> are copied.</param>
            <param name="arrayIndex">The zero-based index at which to begin the insertion of the
            contents from this <see cref="T:System.Json.JsonObject"/> instance.</param>
        </member>
        <member name="M:System.Json.JsonObject.GetEnumerator">
            <summary>
            Returns an enumerator over the key/value pairs contained in this <see cref="T:System.Json.JsonObject"/> instance.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> which iterates
            through the members of this instance.</returns>
        </member>
        <member name="M:System.Json.JsonObject.OnSaveStarted">
            <summary>
            Callback method called when a Save operation is starting for this instance.
            </summary>
        </member>
        <member name="M:System.Json.JsonObject.OnSaveEnded">
            <summary>
            Callback method called when a Save operation is finished for this instance.
            </summary>
        </member>
        <member name="M:System.Json.JsonObject.WriteAttributeString(System.Xml.XmlDictionaryWriter)">
            <summary>
            Callback method called to let an instance write the proper JXML attribute when saving this
            instance.
            </summary>
            <param name="jsonWriter">The JXML writer used to write JSON.</param>
        </member>
        <member name="M:System.Json.JsonObject.WriteStartElementAndGetNext(System.Xml.XmlDictionaryWriter,System.Int32)">
            <summary>
            Callback method called during Save operations to let the instance write the start element
            and return the next element in the collection.
            </summary>
            <param name="jsonWriter">The JXML writer used to write JSON.</param>
            <param name="currentIndex">The index within this collection.</param>
            <returns>The next item in the collection, or null of there are no more items.</returns>
        </member>
        <member name="P:System.Json.JsonObject.JsonType">
            <summary>
            Gets the JSON type of this <see cref="T:System.Json.JsonObject"/>. The return value
            is always <see cref="T:System.Json.JsonType">Object</see>.
            </summary>
        </member>
        <member name="P:System.Json.JsonObject.Keys">
            <summary>
            Gets a collection that contains the keys in this <see cref="T:System.Json.JsonObject"/>.
            </summary>
        </member>
        <member name="P:System.Json.JsonObject.Values">
            <summary>
            Gets a collection that contains the values in this <see cref="T:System.Json.JsonObject"/>.
            </summary>
        </member>
        <member name="P:System.Json.JsonObject.Count">
            <summary>
            Returns the number of key/value pairs in this <see cref="T:System.Json.JsonObject"/>.
            </summary>
        </member>
        <member name="P:System.Json.JsonObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Json#JsonValue}}#IsReadOnly">
            <summary>
            Gets a value indicating whether this JSON CLR object is read-only.
            </summary>
        </member>
        <member name="P:System.Json.JsonObject.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>The <see cref="T:System.Json.JsonValue"/> associated to the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">If key is null.</exception>
            <exception cref="T:System.ArgumentException">The property is set and the value is a
            <see cref="T:System.Json.JsonValue"/> with <see cref="P:System.Json.JsonValue.JsonType"/>
            property of value <see cref="T:System.Json.JsonType">Default</see>.</exception>
        </member>
        <member name="T:System.Json.JsonPrimitive">
            <summary>
            Represents a JavaScript Object Notation (JSON) primitive type in the common language runtime (CLR).
            </summary>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Boolean"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Boolean"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Boolean</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Boolean"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Byte"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Byte"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Byte"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.SByte)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.SByte"/> type.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.SByte"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.SByte"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Decimal"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Decimal"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Decimal"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Int16"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Int16"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Int16"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.UInt16"/> type.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.UInt16"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.UInt16"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Int32"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Int32"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Int32"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.UInt32"/> type.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.UInt32"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.UInt32"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Int64"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Int64"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Int64"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.UInt64"/> type.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.UInt64"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.UInt64"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Single)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Single"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Single"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Single"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Double)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Double"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Double"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">Number</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Double"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.String"/> type.
            </summary>
            <param name="value">The <see cref="T:System.String"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.String"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">String</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.String"/>.</remarks>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Char)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Char"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Char"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">String</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Char"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.DateTime"/> type.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.DateTime"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">String</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.DateTime"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.DateTimeOffset)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.DateTimeOffset"/> type.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.DateTimeOffset"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">String</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.DateTimeOffset"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Uri"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Uri"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Uri"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">String</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Uri"/>.</remarks>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:System.Json.JsonPrimitive.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of a <see cref="T:System.Json.JsonPrimitive"/> type with a <see cref="T:System.Guid"/> type.
            </summary>
            <param name="value">The <see cref="T:System.Guid"/> object that initializes the new instance.</param>
            <remarks>A <see cref="T:System.Json.JsonPrimitive"/> object stores a <see cref="T:System.Json.JsonType"/> and the value used to initialize it.
            When initialized with a <see cref="T:System.Guid"/> object, the <see cref="T:System.Json.JsonType"/> is a <see cref="T:System.Json.JsonType">String</see>, which can be
            recovered using the <see cref="P:System.Json.JsonPrimitive.JsonType"/> property. The value used to initialize the <see cref="T:System.Json.JsonPrimitive"/>
            object can be recovered by casting the <see cref="T:System.Json.JsonPrimitive"/> to <see cref="T:System.Guid"/>.</remarks>
        </member>
        <member name="M:System.Json.JsonPrimitive.ReadAs(System.Type)">
            <summary>
            Attempts to convert this <see cref="T:System.Json.JsonPrimitive"/> instance into an instance of the specified type.
            </summary>
            <param name="type">The type to which the conversion is being performed.</param>
            <returns>An object instance initialized with the <see cref="T:System.Json.JsonValue"/> value
            specified if the conversion.</returns>
            <exception cref="T:System.UriFormatException">If T is <see cref="T:System.Uri"/> and this value does
            not represent a valid Uri.</exception>
            <exception cref="T:System.OverflowException">If T is a numeric type, and a narrowing conversion would result
            in a loss of data. For example, if this instance holds an <see cref="T:System.Int32"/> value of 10000,
            and T is <see cref="T:System.Byte"/>, this operation would throw an <see cref="T:System.OverflowException"/>
            because 10000 is outside the range of the <see cref="T:System.Byte"/> data type.</exception>
            <exception cref="T:System.FormatException">If the conversion from the string representation of this
            value into another fails because the string is not in the proper format.</exception>
            <exception cref="T:System.InvalidCastException">If this instance cannot be read as type T.</exception>
        </member>
        <member name="M:System.Json.JsonPrimitive.TryReadAs(System.Type,System.Object@)">
            <summary>
            Attempts to convert this <see cref="T:System.Json.JsonPrimitive"/> instance into an instance of the specified type.
            </summary>
            <param name="type">The type to which the conversion is being performed.</param>
            <param name="value">An object instance to be initialized with this instance or null if the conversion cannot be performed.</param>
            <returns>true if this <see cref="T:System.Json.JsonPrimitive"/> instance can be read as the specified type; otherwise, false.</returns>
        </member>
        <member name="P:System.Json.JsonPrimitive.JsonType">
            <summary>
            Gets the JsonType that is associated with this <see cref="T:System.Json.JsonPrimitive"/> object.
            </summary>
        </member>
        <member name="T:System.Json.JsonType">
            <summary>
            An enumeration that specifies primitive and structured JavaScript Object 
            Notation (JSON) common language runtime (CLR) types.
            </summary>
        </member>
        <member name="F:System.Json.JsonType.String">
            <summary>
            Specifies the JSON string CLR type.
            </summary>
        </member>
        <member name="F:System.Json.JsonType.Number">
            <summary>
            Specifies the JSON number CLR type.
            </summary>
        </member>
        <member name="F:System.Json.JsonType.Object">
            <summary>
            Specifies the JSON object CLR type that consists of an unordered collection
            of key/value pairs, where the key is of type String and the value is of
            type <see cref="T:System.Json.JsonValue"/>, which can, in turn, be either a
            primitive or a structured JSON type.
            </summary>
        </member>
        <member name="F:System.Json.JsonType.Array">
            <summary>
            Specifies the JSON array CLR type that consists of an ordered collection of
            <see cref="T:System.Json.JsonValue"/>types, which can, in turn, be either
            primitive or structured JSON types.
            </summary>
        </member>
        <member name="F:System.Json.JsonType.Boolean">
            <summary>
            Specifies the JSON Boolean CLR type.
            </summary>
        </member>
        <member name="F:System.Json.JsonType.Default">
            <summary>
            Specifies the type returned by calls to <see cref="M:System.Json.JsonValue.ValueOrDefault(System.String)"/>
            or <see cref="M:System.Json.JsonValue.ValueOrDefault(System.Int32)"/>
            when the element searches doesn't exist in the JSON collection. This is a special
            value which does not represent any JSON element, and cannot be added to any
            JSON collections.
            </summary>
        </member>
    </members>
</doc>
